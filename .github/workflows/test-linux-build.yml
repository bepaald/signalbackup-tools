name: Test Linux build

on:
  workflow_dispatch:
  push:
    tags-ignore:
      - '[0-9]*'
    branches:
      - master
    paths-ignore:
      - '**/README.md'
      - '**/autoversion.h'
      - '.github/workflows/*.yml'

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  do-build-tests-raw:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          set -x
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends -V g++ libsqlite3-dev libssl-dev libdbus-1-dev

      - name: Build default
        run: |
          g++ --std=c++2b -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include */*.cc *.cc -o signalbackup-tools -lcrypto -lsqlite3 -ldbus-1

  do-build-tests-parallel-script:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          set -x
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends -V g++ make libsqlite3-dev libssl-dev libdbus-1-dev

      - name: Build new script
        run: |
          bash BUILDSCRIPT.bash
          
  do-build-tests-legacy:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          set -x
          sudo apt-get update
          sudo apt-get install --yes --no-install-recommends -V g++ make libsqlite3-dev libssl-dev libdbus-1-dev

      - name: Build new script (legacy)
        run: |
          CXX=g++-9 CXXFLAGSEXTRA=-Wno-attributes CXXSTD="-std=c++2a" bash BUILDSCRIPT.bash

#  do-build-tests-legacy:
#    runs-on: ubuntu-20.04
#    steps:
#      - uses: actions/checkout@v4
#      - name: Install dependencies
#        run: |
#          set -x
#          sudo apt-get update
#          sudo apt-get install --yes --no-install-recommends -V g++ make libsqlite3-dev libssl-dev libdbus-1-dev
#
#      - name: Build new script (legacy)
#        run: |
#          CXXFLAGSEXTRA=-Wno-attributes CXXSTD="-std=c++2a" bash BUILDSCRIPT.bash
